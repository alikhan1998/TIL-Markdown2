# Today I Learned

## Using Git for Version Control

Today, I learned how to use Git for version control. Git is a powerful tool for tracking changes in code and collaborating with others. Here are some key concepts I've picked up:

### Initializing a Git Repository

To start using Git, you can initialize a Git repository in your project folder using the following command:

git init

This command creates a hidden `.git` folder to store Git's configuration and history.

### Adding Files

You can add files to the staging area using the `git add` command. For example, to add a file named `main.py`, you would run:

git add main.py

### Committing Changes

Once your changes are staged, you can commit them with a meaningful message using the `git commit` command:

git commit -m "Add initial version of main.py"


This creates a snapshot of your project's state.

### Checking Status

To see the status of your Git repository, you can use the `git status` command:

git status

This shows which files are staged, modified, or untracked.

## Conclusion

Learning Git is an essential skill for software development. It allows you to track your project's history, collaborate with others, and safely experiment with code changes.

Remember, the more you practice, the more comfortable you'll become with Git's commands and workflows.



